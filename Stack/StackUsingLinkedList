
#include <iostream>
using namespace std;
#define SIZE 5
class node
{
	int data;
	node* next;
	friend class stack;
};
class stack
{
	node* head;
public:
	stack();
	int IsEmpty();
	void push();
	void pop();
	void gettop();
};
stack::stack()
{
	head=NULL;
}
int stack::IsEmpty()
{
	if(head==NULL)
	{
		return 1;
	}
	else
	{
	   return 0;
	}
}
void stack::push()//insert first
{
	int ch=0,no;
	do
	{
	cout<<"ENTER DATA:-"<<endl;
	cin>>no;
	node* newnode=new node;
	newnode->data=no;
	newnode->next=NULL;
	if(head==NULL)
	{
		head=newnode;
	}
	else
	{
		newnode->next=head;
		head=newnode;
	}
	cout<<"PRESS 1 TO CONTINUE ELSE PRESS 0"<<endl;
	cin>>ch;
	}while(ch==1);
}
void stack::pop()//delete first
{
	int ch=0;node* temp=head;
	do
	{
	if(IsEmpty())
	{
		cout<<"LINKED LIST IS EMPTY!!"<<endl;
	}
	else if(temp->next==NULL)
	{

		cout<<temp->data<<" POPPED!!"<<endl;
		delete temp;
		head=NULL;
		break;
	}
	else
	{
		node* temp=head;
		cout<<temp->data<<" POPPED!!"<<endl;
		head=head->next;
		delete temp;
	}
	cout<<"PRESS 1 TO CONTINUE ELSE PRESS ZERO"<<endl;
	cin>>ch;
   }while(ch==1);
}
void stack::gettop()
{
	cout<<"TOP OF STACK IS"<<endl;
	cout<<head->data<<endl;
}
int main()
{
	stack call;
	cout<<"-------------------------------------"<<endl;
	cout<<"STACK USING ARRAY"<<endl;
	cout<<"-------------------------------------"<<endl;
	call.push();
	cout<<"-------------------------------------"<<endl;
	call.gettop();
	cout<<"-------------------------------------"<<endl;
	call.pop();
	cout<<"-------------------------------------"<<endl;
	return 0;
}
